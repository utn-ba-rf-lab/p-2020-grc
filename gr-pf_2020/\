id: howto_pf_2020
label: pf_2020
category: '[howto]'

templates:
  imports: import howto
  make: howto.pf_2020(${modulation_key},${psk_key},${psk_fc_key},${fc_key}, ${fs_key}, ${pammethod_key}, ${pamtype_key}, ${duty_key},${nbits_key},${am_fc_8bits_key},${am_fc_7bits_key},${am_fc_6bits_key},${am_fc_5bits_key},${psk_fc_key},${psk_fs5M_key},{$psk_fs1M_key})
#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:

- id: psk_fs1M_key
  label: test
  dtype: float

- id: psk_fs5M_key
  label: test
  dtype: float

- id: psk_fc_key
  label: test
  dtype: float
  
- id: am_fc_5bits_key
  label: test
  dtype: float

- id: am_fc_6bits_key
  label: test
  dtype: float

- id: am_fc_7bits_key
  label: test
  dtype: float

- id: am_fc_8bits_key
  label: test
  dtype: float

- id: duty_key
  label: test
  dtype: float

- id: pamtype_key
  label: test
  dtype: float

- id: pammethod_key
  label: test
  dtype: float

- id: fc_key  
  label: test
  dtype: float

- id: fs_key
  label: test
  dtype: float 

- id: modulation_key
  label: Modulation
  dtype: string
  default: "AM"
  options: [am, ook, psk, pam]
  option_labels: ["AM", "OOK", "PSK","PAM"]


- id: psk_key
  label: Type
  dtype: string
  default: "bpsk"
  options: [bpsk, qpsk, 8psk]
  option_labels: ["BPSK","QPSK","8PSK"]  

- id: psk_fc_key
  label: Carrier frequency
  dtype: int
  default: 5000000
  options: [5000000,1000000]
  hide: ${ ( 'none' if modulation_key == "AM" else 'all') 
  option_labels: ["5 MHz","1 MHz"] 

- id: nbits_key
  label: N Bits
  dtype: int
  default: 8
  options: [8,7,6,5]
  option_labels: ["8","7","6","5"] 

  
  
#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)

  # inputs:
        #- label: ...
        #  domain: ...
        #  dtype: ...
        # vlen: ...
        #  optional: ...

  #outputs:
  #- label: ...
  #  domain: ...
  #  dtype: ...
  # vlen: ...
  # optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
